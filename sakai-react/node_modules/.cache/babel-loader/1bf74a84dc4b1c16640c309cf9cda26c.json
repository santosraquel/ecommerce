{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\raque\\\\Desktop\\\\ecommerce\\\\sakai-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n      if (me._request) {\n        return;\n      }\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n        me._request = null;\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          me._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          me._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      me._lastDate = date;\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n      if (me._active) {\n        me._notify(false);\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n      if (!me._active) {\n        me._target[prop] = to;\n        me._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n        return;\n      }\n      delete stacks[axis][meta.index];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me._dataCheck();\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n      me._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      me._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n        data = me._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = me._getOtherScale(scale);\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, value, parsed, otherValue;\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(me._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        me.parse(0, count);\n      }\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n      me.parse(start, count);\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._syncList.push(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._syncList.push(['_removeElements', start, count]);\n      this._syncList.push(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._syncList.push(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = me._getRuler();\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : undefined,\n          width: horizontal ? undefined : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n        vScale = _me$_cachedMeta.vScale,\n        _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n        baseValue = _me$options.base,\n        minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n        if (value === 0) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      var actualBase = baseValue || 0;\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      clipArea(chart.ctx, chart.chartArea);\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n      unclipArea(chart.ctx);\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n        _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n        xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n        _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n        yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n        data = _this$_cachedMeta.data,\n        _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n        iScale = _me$_cachedMeta2.iScale,\n        vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        me.updateElement(point, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n    _classCallCheck(this, DoughnutController);\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n      var chartWeight = me._getRingWeight(me.index);\n      var _me$_getRotationExten = me._getRotationExtents(),\n        circumference = _me$_getRotationExten.circumference,\n        rotation = _me$_getRotationExten.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var circumference = me._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var startAngle = me._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            if (controller !== me) {\n              controller.configure();\n            }\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      me._drawStart = start;\n      me._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n        iScale = _me$_cachedMeta3.iScale,\n        vScale = _me$_cachedMeta3.vScale,\n        _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n        }\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n    _classCallCheck(this, PolarAreaController);\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(ScatterController);\n}(LineController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n      index = _metasets$i2.index,\n      data = _metasets$i2.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n    x = _getRelativePosition$.x,\n    y = _getRelativePosition$.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return me;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this4;\n    _classCallCheck(this, Scale);\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n      var _me$getUserBounds = me.getUserBounds(),\n        min = _me$getUserBounds.min,\n        max = _me$getUserBounds.max,\n        minDefined = _me$getUserBounds.minDefined,\n        maxDefined = _me$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = me.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n      for (i = 0; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = me._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n        _me$options2 = me.options,\n        tickOpts = _me$options2.ticks,\n        titleOpts = _me$options2.title,\n        gridOpts = _me$options2.grid;\n      var display = me._isVisible();\n      var isHorizontal = me.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n            first = _me$_getLabelSizes.first,\n            last = _me$_getLabelSizes.last,\n            widest = _me$_getLabelSizes.widest,\n            highest = _me$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n      me._handleMargins();\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n        _me$options3$ticks = _me$options3.ticks,\n        align = _me$options3$ticks.align,\n        padding = _me$options3$ticks.padding,\n        position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n        axis = _this$options.axis,\n        position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = me._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      for (i = 0; i < ticksLength; ++i) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = me._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n        position = _me$options4.position,\n        ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n        position = _me$options5.position,\n        _me$options5$ticks = _me$options5.ticks,\n        crossAlign = _me$options5$ticks.crossAlign,\n        mirror = _me$options5$ticks.mirror,\n        padding = _me$options5$ticks.padding;\n      var labelSizes = me._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n      if (me.options.ticks.mirror) {\n        return;\n      }\n      var chart = me.chart;\n      var position = me.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n        ctx = me.ctx,\n        grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = me.ctx;\n      var area = me._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options2 = this.options,\n        position = _this$options2.position,\n        title = _this$options2.title,\n        reverse = _this$options2.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom') {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n      if (!me._isVisible()) {\n        return;\n      }\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n        me._notify(me._init, chart, 'install');\n      }\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n      var result = me._notify(descriptors, chart, hook, args);\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n        me._notify(me._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator4 = _createForOfIteratorHelper(descriptors),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var descriptor = _step4.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = _toConsumableArray(scopes);\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator5 = _createForOfIteratorHelper(names),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var prop = _step5.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator6 = _createForOfIteratorHelper(names),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var prop = _step6.value;\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return false;\n}\nvar version = \"3.3.2\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, config) {\n    var _this5 = this;\n    _classCallCheck(this, Chart);\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n        aspectRatio = _this$options3.aspectRatio,\n        maintainAspectRatio = _this$options3.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n        datasets = me.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n      me._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n          meta = me.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      me._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n      me._plugins.invalidate();\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n          controller = _me$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      me._minPadding = minPadding;\n      me._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      me._updateDatasets(mode);\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      me._layers.sort(compare2Level('z', '_idx'));\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n          width = _me$_resizeBeforeDraw.width,\n          height = _me$_resizeBeforeDraw.height;\n        me._resize(width, height);\n        me._resizeBeforeDraw = null;\n      }\n      me.clear();\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = me._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = me.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n      meta.controller.draw();\n      unclipArea(ctx);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n        ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      me.config.clearCache();\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        me._eventHandler(e);\n      };\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n          index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = me._handleEvent(e, replay);\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        me.render();\n      }\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n        lastActive = _me$_active === void 0 ? [] : _me$_active,\n        options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n      me._lastEvent = null;\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n      changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  var alpha = end - start;\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset;\n  var endAngle = end - angleOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this7;\n    _classCallCheck(this, ArcElement);\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n    return _this7;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint.angle,\n        distance = _getAngleFromPoint.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = distance >= innerRadius && distance <= outerRadius;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n        circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset);\n      drawBorder(ctx, me, radiusOffset, endAngle);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref2 = params || {},\n    _ref2$move = _ref2.move,\n    move = _ref2$move === void 0 ? true : _ref2$move,\n    reverse = _ref2.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref3 = params || {},\n    _ref3$move = _ref3.move,\n    move = _ref3$move === void 0 ? true : _ref3$move,\n    reverse = _ref3.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator7 = _createForOfIteratorHelper(segments),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var segment = _step7.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this8;\n    _classCallCheck(this, LineElement);\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n    return _this8;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n      var segmentMethod = _getSegmentMethod(me);\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      var _iterator8 = _createForOfIteratorHelper(segments),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var segment = _step8.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n      ctx.save();\n      _draw(ctx, me, start, count);\n      ctx.restore();\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this9;\n    _classCallCheck(this, PointElement);\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n    return _this9;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this10;\n    _classCallCheck(this, BarElement);\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n    return _this10;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n    min = _iScale$getUserBounds2.min,\n    max = _iScale$getUserBounds2.max,\n    minDefined = _iScale$getUserBounds2.minDefined,\n    maxDefined = _iScale$getUserBounds2.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var target = null;\n  var horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n    _ref4$x = _ref4.x,\n    x = _ref4$x === void 0 ? null : _ref4$x,\n    _ref4$y = _ref4.y,\n    y = _ref4$y === void 0 ? null : _ref4$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (segment) {\n    var first = linePoints[segment.start];\n    var last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  var chart = source.chart,\n    scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nfunction getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator9 = _createForOfIteratorHelper(segments),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var segment = _step9.value;\n      var bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[segment.start],\n          end: points[segment.end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator10 = _createForOfIteratorHelper(targetSegments),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var tgt = _step10.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator11 = _createForOfIteratorHelper(fillSources),\n            _step11;\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var fillSource = _step11.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref5 = bounds || {},\n    property = _ref5.property,\n    start = _ref5.start,\n    end = _ref5.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator12 = _createForOfIteratorHelper(segments),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var _step12$value = _step12.value,\n        src = _step12$value.source,\n        tgt = _step12$value.target,\n        start = _step12$value.start,\n        end = _step12$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref6 = fillOption || {},\n    _ref6$above = _ref6.above,\n    above = _ref6$above === void 0 ? color : _ref6$above,\n    _ref6$below = _ref6.below,\n    below = _ref6$below === void 0 ? color : _ref6$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this11;\n    _classCallCheck(this, Legend);\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n        ctx = me.ctx;\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = me._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxWidth = me.maxWidth,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxHeight = me.maxHeight,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var top = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          top = 0;\n          currentColWidth = currentColHeight = 0;\n        }\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += fontSize + padding;\n        hitboxes[i] = {\n          left: left,\n          top: top,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        top += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n      if (!me.options.display) {\n        return;\n      }\n      var titleHeight = me._computeTitleHeight();\n      var hitboxes = me.legendHitBoxes,\n        _me$options6 = me.options,\n        align = _me$options6.align,\n        padding = _me$options6.labels.padding;\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        var _iterator13 = _createForOfIteratorHelper(hitboxes),\n          _step13;\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var hitbox = _step13.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        var _iterator14 = _createForOfIteratorHelper(hitboxes),\n          _step14;\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var _hitbox = _step14.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n        me._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n        columnSizes = me.columnSizes,\n        lineWidths = me.lineWidths,\n        ctx = me.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: legendItem.textAlign\n        });\n      };\n      var isHorizontal = me.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n        me._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this12;\n    _classCallCheck(this, Title);\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n      var _me$_drawArgs = me._drawArgs(offset),\n        titleX = _me$_drawArgs.titleX,\n        titleY = _me$_drawArgs.titleY,\n        maxWidth = _me$_drawArgs.maxWidth,\n        rotation = _me$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this13;\n    _classCallCheck(this, Tooltip);\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n        caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n      if (!opacity) {\n        return;\n      }\n      me._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref7) {\n        var datasetIndex = _ref7.datasetIndex,\n          index = _ref7.index;\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = me._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n      var positionChanged = me._positionChanged(active, e);\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        me._active = active;\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this14;\n    _classCallCheck(this, CategoryScale);\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getUserBounds2 = me.getUserBounds(),\n        minDefined = _me$getUserBounds2.minDefined,\n        maxDefined = _me$getUserBounds2.maxDefined;\n      var _me$getMinMax = me.getMinMax(true),\n        min = _me$getMinMax.min,\n        max = _me$getMinMax.max;\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref8) {\n  var horizontal = _ref8.horizontal,\n    minRotation = _ref8.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this15;\n    _classCallCheck(this, LinearScaleBase);\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n      var _me$getUserBounds3 = me.getUserBounds(),\n        minDefined = _me$getUserBounds3.minDefined,\n        maxDefined = _me$getUserBounds3.maxDefined;\n      var min = me.min,\n        max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        setMax(max + 1);\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax2 = me.getMinMax(true),\n        min = _me$getMinMax2.min,\n        max = _me$getMinMax2.max;\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = me._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this16;\n    _classCallCheck(this, LogarithmicScale);\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax3 = me.getMinMax(true),\n        min = _me$getMinMax3.min,\n        max = _me$getMinMax3.max;\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$getUserBounds4 = me.getUserBounds(),\n        minDefined = _me$getUserBounds4.minDefined,\n        maxDefined = _me$getUserBounds4.maxDefined;\n      var min = me.min;\n      var max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var i, textSize, pointPosition;\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    var _opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = _opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(_opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    var _angle = toDegrees(scale.getIndexAngle(i));\n    var size = labelSizes[i];\n    adjustPointPositionForLabelHeight(_angle, size, pointLabelPosition);\n    var textAlign = getTextAlignForAngle(_angle);\n    var left = void 0;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    var right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign: textAlign,\n      left: left,\n      top: pointLabelPosition.y,\n      right: right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this17;\n    _classCallCheck(this, RadialLinearScale);\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax4 = me.getMinMax(false),\n        min = _me$getMinMax4.min,\n        max = _me$getMinMax4.max;\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n        backgroundColor = _me$options7.backgroundColor,\n        circular = _me$options7.grid.circular;\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this18;\n    _classCallCheck(this, TimeScale);\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n      var _me$getUserBounds5 = me.getUserBounds(),\n        min = _me$getUserBounds5.min,\n        max = _me$getUserBounds5.max,\n        minDefined = _me$getUserBounds5.minDefined,\n        maxDefined = _me$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = me.min;\n      var max = me.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n      var size = me._getLabelSize(exampleLabel);\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = me.getMatchingVisibleMetas();\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = me.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    var result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this19;\n    _classCallCheck(this, TimeSeriesScale);\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._maxIndex = undefined;\n    return _this19;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n      var timestamps = me._getTimestampsForTable();\n      me._table = me.buildLookupTable(timestamps);\n      me._maxIndex = me._table.length - 1;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var me = this;\n      var min = me.min,\n        max = me.max;\n      if (!timestamps.length) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      var items = [min];\n      var i, ilen, curr;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr > min && curr < max) {\n          items.push(curr);\n        }\n      }\n      items.push(max);\n      return items;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return interpolate(this._table, value) / this._maxIndex;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * this._maxIndex, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","_me$_cachedMeta","_me$options","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","_this$_parsing3","_this$_parsing3$xAxis","_this$_parsing3$yAxis","_this$_cachedMeta","points","_me$_cachedMeta2","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_super3","_this","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_me$_getRotationExten","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","_me$_cachedMeta3","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","_iScale$getUserBounds","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_DatasetController5","_super5","_this2","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","_LineController","_super8","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","_metasets$i","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","_metasets$i2","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","_updateDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition$","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","_BasePlatform2","_super10","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","_this$getProps","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_Element","_super11","_this4","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_me$getUserBounds","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_me$options2","titleOpts","gridOpts","titleHeight","_me$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_me$options3","_me$options3$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_me$options4","_me$options5","_me$options5$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options2","_titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_iterator4","_step4","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator5","_step5","descriptorDefaults","_getResolver2","resolverCache","includes","_descriptors2","isScriptable","isIndexable","_iterator6","_step6","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","_this5","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","_this$options3","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_me$getDatasetMeta","_updateLayout","_updateDatasets","_eventHandler","noArea","_me$_layers","_idx","_updateDataset","_me$_resizeBeforeDraw","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_this6","eventFilter","_handleEvent","_me$_active","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","alpha","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","_Element2","_super12","_this7","_assertThisInitialized","chartX","chartY","_getAngleFromPoint","_this$getProps2","betweenAngles","withinRadius","_this$getProps3","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref2","_ref2$move","fastPathSegment","_pathVars2","_ref3","_ref3$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator7","_step7","usePath2D","LineElement","_Element3","_super13","_this8","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator8","_step8","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this9","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","pointStyle","getBarBounds","bar","_bar$getProps","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","_Element5","_super15","_this10","_boundingRects","addRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","_iScale$getUserBounds2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi2","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","_source$scale","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","_ref4","_ref4$x","_ref4$y","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","_iterator9","_step9","targetSegments","_iterator10","_step10","tgt","subBounds","fillSources","_iterator11","_step11","fillSource","clipBounds","_scale$chart$chartAre","_ref5","interpolatedLineTo","interpolatedPoint","_fill","_iterator12","_step12","_step12$value","src","_src$style","_src$style2","_src$style2$backgroun","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","_ref6","_ref6$above","_ref6$below","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_Element6","_super16","_this11","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_me$options6","_iterator13","_step13","hitbox","_iterator14","_step14","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_super17","_this12","_padding","textSize","_drawArgs","fontOpts","_me$_drawArgs","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_super18","_this13","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref7","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_super19","_this14","_startValue","_valueRange","isFinite","_me$getUserBounds2","_me$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref8","rad","LinearScaleBase","_Scale2","_super20","_this15","_endValue","handleTickRangeOptions","_me$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_super21","_me$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this16","_zero","_me$getMinMax3","_me$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","_scale$_pointLabelIte","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","_LinearScaleBase2","_super23","_this17","_me$getMinMax4","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_me$options7","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this18","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_me$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_TimeScale","_super25","_this19","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/raque/Desktop/ecommerce/sakai-react/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}