{"ast":null,"code":"Prism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b-?(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /(^|[^/])\\/(?!\\/)(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  }\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\nPrism.languages.js = Prism.languages.javascript;","map":{"version":3,"names":["Prism","languages","javascript","extend","insertBefore","pattern","lookbehind","greedy","alias","inside","rest","markup","js"],"sources":["C:/Users/raque/Desktop/ecommerce/sakai-react/node_modules/prismjs/components/prism-javascript.js"],"sourcesContent":["Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n\t\talias: 'function'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript',\n\t\t\tgreedy: true\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n"],"mappings":"AAAAA,KAAK,CAACC,SAAS,CAACC,UAAU,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;EAC5D,SAAS,EAAE,6TAA6T;EACxU,QAAQ,EAAE,2FAA2F;EACrG;EACA,UAAU,EAAE,+CAA+C;EAC3D,UAAU,EAAE;AACb,CAAC,CAAC;AAEFH,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,YAAY,EAAE,SAAS,EAAE;EACrD,OAAO,EAAE;IACRC,OAAO,EAAE,uFAAuF;IAChGC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;EACT,CAAC;EACD;EACA,mBAAmB,EAAE;IACpBF,OAAO,EAAE,uHAAuH;IAChIG,KAAK,EAAE;EACR;AACD,CAAC,CAAC;AAEFR,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,YAAY,EAAE,QAAQ,EAAE;EACpD,iBAAiB,EAAE;IAClBC,OAAO,EAAE,wBAAwB;IACjCE,MAAM,EAAE,IAAI;IACZE,MAAM,EAAE;MACP,eAAe,EAAE;QAChBJ,OAAO,EAAE,aAAa;QACtBI,MAAM,EAAE;UACP,2BAA2B,EAAE;YAC5BJ,OAAO,EAAE,WAAW;YACpBG,KAAK,EAAE;UACR,CAAC;UACDE,IAAI,EAAEV,KAAK,CAACC,SAAS,CAACC;QACvB;MACD,CAAC;MACD,QAAQ,EAAE;IACX;EACD;AACD,CAAC,CAAC;AAEF,IAAIF,KAAK,CAACC,SAAS,CAACU,MAAM,EAAE;EAC3BX,KAAK,CAACC,SAAS,CAACG,YAAY,CAAC,QAAQ,EAAE,KAAK,EAAE;IAC7C,QAAQ,EAAE;MACTC,OAAO,EAAE,2CAA2C;MACpDC,UAAU,EAAE,IAAI;MAChBG,MAAM,EAAET,KAAK,CAACC,SAAS,CAACC,UAAU;MAClCM,KAAK,EAAE,qBAAqB;MAC5BD,MAAM,EAAE;IACT;EACD,CAAC,CAAC;AACH;AAEAP,KAAK,CAACC,SAAS,CAACW,EAAE,GAAGZ,KAAK,CAACC,SAAS,CAACC,UAAU"},"metadata":{},"sourceType":"script"}